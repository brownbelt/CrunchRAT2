import pymysql
from core.config import *


class Tasking(object):

    def __init__(self):
        # tries to open a database connection
        try:
            self.connection = pymysql.connect(host="localhost",
                                              port=3306,
                                              user=username,
                                              passwd=password,
                                              db=database,
                                              autocommit=True)

        except Exception:
            raise

    def generate_command_code(self, command):
        # TO DO: actually build out popen 2.x call here

        # DEBUGGING
        print("print 'this was generated by the server'")

    def check_tasking(self, hostname, process_id):
        # tries to check tasking
        try:
            with self.connection.cursor() as cursor:
                statement = "SELECT `unique_id`, `task_action`, `task_secondary` FROM `tasks` WHERE `hostname` = %s AND `process_id` = %s"
                cursor.execute(statement, (hostname, process_id))
                results = cursor.fetchone()
                row_count = cursor.rowcount

            # if we have tasking
            if row_count == 1:
                # parses task information
                unique_id = results[0]
                task_action = results[1]
                task_secondary = results[2]

                # if task action is "command"
                if task_action == "command":
                    self.generate_command_code(task_secondary)

        except Exception:
            raise

        # finally closes database connection
        finally:
            self.connection.close()
